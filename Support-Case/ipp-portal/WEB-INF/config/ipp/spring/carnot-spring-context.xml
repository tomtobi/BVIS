<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
	- Application context for a Infinity Process Engine client.
-->
<beans>

   <!-- Infinity Process Platform Global Configuration -->

   <!-- Resolves ${...} placeholders from carnot.properties -->
   <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="location" value="classpath:carnot.properties" />
   </bean>

   <bean id="carnotAuditTrailDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName" value="java:comp/env/jdbc/AuditTrail.DataSource" />
   </bean>

   <bean id="carnotXaAuditTrailDataSource" class="org.apache.derby.jdbc.EmbeddedXADataSource">
      <property name="databaseName" value="carnot" />
      <property name="user" value="carnot" />
      <property name="password" value="ag" />
   </bean>

   <!-- adjust to whatever TX manager is required -->  
   <!--alias alias="carnotTxManager" name="carnotDataSourceTxManager" /-->
   <alias alias="carnotTxManager" name="jtaTxManager" />

   <bean id="carnotDataSourceTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="carnotAuditTrailDataSource" />
   </bean>


   <bean name="carnotDefaultDmsProvider" class="com.sungard.infinity.bpm.vfs.jcr.JcrDocumentRepositoryServiceBean">

      <!-- Resolve session factory by name to enable lazy initialization. -->
      <property name="sessionFactoryName" value="jcrSessionFactory" />

   </bean>


   <!-- Can be used to override settings from carnot.properties -->
   <bean id="customCarnotProperties"
      class="org.springframework.beans.factory.config.PropertiesFactoryBean">
      <property name="properties">
         <props>
<!-- 
            <prop key="AuditTrail.Type">DERBY</prop>
 -->
         </props>
      </property>
   </bean>


   <!-- Infinity Process Platform API -->


   <bean id="carnotWorkflowService" parent="abstractPublicCarnotService"
      class="ag.carnot.workflow.runtime.spring.WorkflowServiceBean" />

   <bean id="carnotUserService" parent="abstractPublicCarnotService"
      class="ag.carnot.workflow.runtime.spring.UserServiceBean" />

   <bean id="carnotQueryService" parent="abstractPublicCarnotService"
      class="ag.carnot.workflow.runtime.spring.QueryServiceBean" />

   <bean id="carnotAdministrationService" parent="abstractPublicCarnotService"
      class="ag.carnot.workflow.runtime.spring.AdministrationServiceBean" />

   <bean id="carnotDocumentManagementService" parent="abstractPublicCarnotService"
      class="ag.carnot.workflow.runtime.spring.DocumentManagementServiceBean" />


   <!-- Infinity Process Platform Internals -->


   <bean abstract="true" id="abstractCarnotService"
      class="ag.carnot.workflow.runtime.spring.AbstractSpringServiceBean">

      <property name="carnotProperties" ref="customCarnotProperties" />

      <property name="transactionManager" ref="carnotTxManager" />

      <property name="dataSource" ref="xaAuditTrailConnectionFactory" />
      <property name="dmsProvider" ref="carnotDefaultDmsProvider" />
   </bean>

   <bean abstract="true" name="abstractPublicCarnotService" parent="abstractCarnotService">
      <!--property name="principalProvider" ref="whatever" /-->
   </bean>

   <bean id="carnotForkingService" parent="abstractCarnotService"
      class="ag.carnot.workflow.runtime.spring.QueuedSpringForkingService">

      <property name="jobManager" ref="carnotAsyncJobManager" />

   </bean>

   <bean id="carnotAsyncJobManager" class="ag.carnot.workflow.runtime.spring.threading.FiFoJobManager"
      singleton="true">

      <property name="maxParallelJobs" value="10" />

      <property name="useShutdownHook" value="true" />

   </bean>

   <!-- JTA TX manager for i.e. Tomcat -->

   <bean id="jtaTxManager" class="org.springframework.transaction.jta.JtaTransactionManager">
      <property name="userTransaction" ref="xaTransactionManager" />
   </bean>

	<bean name="xaTransactionManager" class="org.jencks.factory.TransactionManagerFactoryBean" />

   <bean id="jencksConnectionManager" class="org.jencks.factory.ConnectionManagerFactoryBean">

      <property name="transactionManager" ref="xaTransactionManager" />
      
      <property name="transaction" value="xa" />
      
      <!--property name="connectionTracker">
         <bean class="org.apache.geronimo.connector.outbound.connectiontracking.ConnectionTrackingCoordinator" />
      </property-->
   </bean>

   <bean id="xaAuditTrailConnectionFactory" class="org.springframework.jca.support.LocalConnectionFactoryBean">
      <property name="managedConnectionFactory">
         <bean class="ag.carnot.db.jca.XaDataSourceMCF">
            <constructor-arg index="0" ref="carnotXaAuditTrailDataSource" />
         </bean>
      </property>
      <property name="connectionManager" ref="jencksConnectionManager" />
   </bean>
   
   <bean id="hibernatePropertiesBean"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean" lazy-init="true" >
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
            <prop key="hibernate.cache.use_second_level_cache">false</prop>
			</props>
		</property>    
	</bean>

	<bean id="hibernateSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean" lazy-init="true"> 
		<property name="dataSource">
 			<ref bean="carnotXaAuditTrailDataSource" />
		</property>
        <property name="jtaTransactionManager">
            <bean factory-bean="jtaTxManager" factory-method="getTransactionManager"/>
        </property>
		<property name="mappingLocations">
			<value>classpath:**/*.hbm.xml</value>
		</property>
		<property name="hibernateProperties" ref="hibernatePropertiesBean" />
	</bean>

</beans>
